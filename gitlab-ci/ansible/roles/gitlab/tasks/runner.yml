---
- name: Check ports are accessible from the current host
  wait_for:
    host: "{{ ansible_host }}"
    port: "{{ item }}"
    state: started
    delay: 10
    timeout: 300
  ignore_errors: yes
  with_items:
    - 80

- name: Extract runner registration roken
  community.docker.docker_container_exec:
    container: gitlab
    command: 'gitlab-rails runner -e production "puts Gitlab::CurrentSettings.current_application_settings.runners_registration_token"'
  register: runner_registration_token

- name: Print runner token
  ansible.builtin.debug:
    msg: runner{{ runner_registration_token }}

- name: Create runner container
  community.docker.docker_container:
    name: gitlab-runner
    image: gitlab/gitlab-runner:latest
    restart: yes
    state: started
    privileged: yes
    volumes:
      - /srv/gitlabrunner/config:/etc/gitlab-runner
      - /var/run/docker.sock:/var/run/docker.sock

- name: Set gitlab runner token
  set_fact:
    gitlab_runner_token: "{{ runner_registration_token.stdout }}"

- name: register docker runner
  command: |
    docker exec -it gitlab-runner gitlab-runner register \
    --url http://{{ ansible_host }} \
    --non-interactive \
    --locked=false \
    --name DockerRunner \
    --registration-token {{ gitlab_runner_token }} \
    --executor docker \
    --docker-image alpine:latest \
    --docker-privileged \
    --tag-list "linux,xenial,ubuntu,docker" \
    --run-untagged
